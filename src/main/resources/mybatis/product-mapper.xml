<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC
        "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.itbank.repository.mybatis.ProductDAO">
    <select id="getTotal" parameterType="map" resultType="int">
        SELECT count(*)
        FROM (
        SELECT
        p.id,
        p.name,
        c.name as productCategoryName,
        p.price,
        p.count,
        p.dcRate,
        p.img,
        p.detail,
        ROW_NUMBER() OVER (ORDER BY p.id DESC) rn
        FROM product p
        JOIN product_category c
        ON p.product_category_id = c.id
        <where>
            <choose>
                <when test="category == 'all'">
                    AND
                    p.id like '%' || #{keyword} || '%'
                    OR
                    p.name like '%' || #{keyword} || '%'
                    OR
                    c.name like '%' || #{keyword} || '%'
                </when>
                <when test="category == 'id'">
                    AND p.id like '%' || #{keyword} || '%'
                </when>
                <when test="category == 'name'">
                    AND p.name like '%' || #{keyword} || '%'
                </when>
                <when test="category == 'productCategoryName'">
                    AND c.name like '%' || #{keyword} || '%'
                </when>
            </choose>
        </where>
        )
    </select>
    <select id="selectAll" resultType="product" parameterType="map">
        SELECT *
        FROM (
        SELECT
        p.id,
        p.name,
        c.name as productCategoryName,
        p.price,
        p.count,
        p.dcRate,
        p.img,
        p.detail,
        ROW_NUMBER() OVER (ORDER BY p.id DESC) rn
        FROM product p
        JOIN product_category c
        ON p.product_category_id = c.id
        )
        WHERE rn BETWEEN #{start} AND #{end}
    </select>
    <select id="search" resultType="product" parameterType="map">
        SELECT *
        FROM (
        SELECT
        p.id,
        p.name,
        c.name as productCategoryName,
        p.price,
        p.count,
        p.dcRate,
        p.img,
        p.detail,
        ROW_NUMBER() OVER (ORDER BY p.id DESC) rn
        FROM product p
        JOIN product_category c
        ON p.product_category_id = c.id
        <where>
            <choose>
                <when test="category == 'all'">
                    AND
                    p.id like '%' || #{keyword} || '%'
                    OR
                    p.name like '%' || #{keyword} || '%'
                    OR
                    c.name like '%' || #{keyword} || '%'
                </when>
                <when test="category == 'id'">
                    AND p.id like '%' || #{keyword} || '%'
                </when>
                <when test="category == 'name'">
                    AND p.name like '%' || #{keyword} || '%'
                </when>
                <when test="category == 'productCategoryName'">
                    AND c.name like '%' || #{keyword} || '%'
                </when>
            </choose>
        </where>
        )
        WHERE rn BETWEEN #{start} AND #{end}
    </select>
    <insert id="insertProduct" parameterType="product">
        insert into product
            (
                name,
                product_category_id,
                price,
                count,
                dcRate,
                detail,
                img
            )
        values
            (
                #{name},
                #{productCategoryId},
                #{price},
                #{count},
                #{dcRate},
                #{detail},
                #{img}
            )
    </insert>
    <select id="selectMaxId" resultType="int">
        select max(id) from product
    </select>

    <select id="selectByCategoryId" resultType="productEntity" parameterType="long">
        select * from product where product_category_id = #{id}
    </select>

    <select id="findMaxId" resultType="long">
        select max(id) as id from product;
    </select>
    <select id="selectOne" parameterType="int" resultType="product">
        select
            p.id,
            p.name,
            c.name as productCategoryName,
            p.price,
            p.count,
            p.dcRate,
            p.img,
            p.detail
        from product p
            join product_category c
            on p.product_category_id = c.id
        where
            p.id = #{id}
    </select>
    <select id="findFile" resultType="String" parameterType="int">
        select img from product where id = #{id}
    </select>
    <delete id="deleteProduct" parameterType="int">
        delete product where id = #{id}
    </delete>
    <update id="update" parameterType="product">
        update product
        set
            name = #{name},
            img = #{img},
            price = #{price},
            dcRate = #{dcRate},
            count = #{count},
            detail = #{detail}
        where
            id = #{id}
    </update>
</mapper>